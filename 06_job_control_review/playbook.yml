---
- name: HTTPS 서버 구축
  hosts: webservers
  gather_facts: yes
  vars_files: vars.yml
  tasks: 
    # 1) 체크 부분 - 배포판 종류, HW 사양 점검
    # 2) 패키지 설치 - httpd, mod_ssl, firewalld
    # 3) 서비스 기동 - httpd, firewalld
    # 4) 웹서비스 설정 
    # 4-1) TLS Key 배포
    #     * /etc/pki/tls/private/localhost.key
    #     * /etc/pki/tls/certs/localhost.crt
    # 4-1-1) 디렉토리 생성 - /etc/pki/tls/{private,certs}
    # 4-1-2) TLS 키 배포
    #     * files/localhost.key -> /etc/pki/tls/private/localhost.key
    #     * files/localhost.crt -> /etc/pki/tls/certs/localhost.crt
    # 4-2) /var/www/html/index.html 파일 생성
    # 5) 방화벽 등록 - http, https
    # notify ~ handlers 반드시 사용
    # block ~ rescue 반드시 사용

    - name: 1) 체크 부분 - 배포판 종류, HW 사양 점검
      fail:
        msg: CentOS가 아니거나 메모리가 부족합니다.
      when: (ansible_distribution != "CentOS") or (ansible_memtotal_mb < min_ram_mb)

    - name: 2) 패키지 설치 - httpd, mod_ssl, firewalld
      yum:
        name: "{{ packages }}"
        state: present

    - name: 3) 서비스 기동 - httpd, firewalld
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items: "{{ services }}" 

    - name: block line
      block:

        - name: 4-1-1) 디렉토리 생성 - /etc/pki/tls/{private, certs}
          file:
            path: "{{ item }}"
            state: directory
          with_items: "{{ ssl_dir }}"

        - name: 4-1-2) TLS 키 배포 
          copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
          with_items: "{{ tls_cert_files }}"
          notify: restart web service

        - name: 4-2) /var/www/html/index.html 파일 생성
          copy:
            src: "{{ index_src }}"
            dest: "{{ index_dest  }}"

      rescue:
        - name: rescue line
          debug:
            msg: >
              웹서버 설정 중 다음과 같은 문제 중 하나 이상 발생했습니다.
              1) 인증서 디렉토리 실패
              2) 인증서 복사 실패
              3) index 파일 생성 실패
              
    - name: 5) 방화벽 등록 - http, https
      firewalld:
        service: "{{ item }}"
        permanent: yes
        immediate: yes
        state: enabled
      with_items: "{{ fw_svcs }}"

  handlers:
    - name: restart web service
      service:
        name: "{{ svc_web }}"
        state: restarted